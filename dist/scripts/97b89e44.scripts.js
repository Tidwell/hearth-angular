"use strict";angular.module("hearthApp",["ngCookies","ngResource","ngSanitize","angularLocalStorage"]).config(["$routeProvider","$locationProvider",function(a,b){b.html5Mode(!0),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/owned",{templateUrl:"views/owned.html",controller:"OwnedCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("hearthApp").controller("MainCtrl",["$scope","cards",function(a,b){a.cardWidth=235,a.cardList=b.get()}]),angular.module("hearthApp").service("cards",["$http",function(a){function b(a){return a.collectible&&"hero"!==a.type}var c={cards:[]};return{get:function(){return a.get("/cards.json").success(function(a){c.cards=a}),c},realCard:b}}]),angular.module("hearthApp").controller("OwnedCtrl",["$scope","cards","owned",function(a,b,c){a.cardList=b.get(),a.owned=c.get(),a.realCard=b.realCard,a.clearData=c.clear,a.order="name",a.reverseSort=!1,a.updateOwned=function(b){b&&b.id&&b.owned&&(a.owned.cards[b.id]=b.owned),c.save()},a.ownAll=function(){a.cardList.cards.forEach(function(b){a.realCard(b)&&a.updateOwned({id:b.id,owned:"legendary"===b.quality?1:2})})}}]),angular.module("hearthApp").service("owned",["storage",function a(b){function c(){b.set("cards",a.cards)}function d(){a.cards={},c()}var a={cards:b.get("cards")||{}};return{get:function(){return a},save:c,clear:d}}]);